<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MSI数据处理流程</title>
    <link href="/2025/01/01/MSI%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/"/>
    <url>/2025/01/01/MSI%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Version：1-0"><a href="#Version：1-0" class="headerlink" title="Version：1.0"></a>Version：1.0</h2><h1 id="一、质谱成像技术"><a href="#一、质谱成像技术" class="headerlink" title="一、质谱成像技术"></a>一、质谱成像技术</h1><p>MSI是一种将质谱分析与空间分辨相结合的分析技术，能够同时获得样品中分子的化学组成信息和空间分布信息，实现对样品表面分子的”可视化”分析。<br>MSI在空间代谢组学中已然成为热门技术，本文介绍的就是对MSI数据处理简要的流程。<br><img src="/img/MSI%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/1-1.jpg"></p><h1 id="二、MSI数据"><a href="#二、MSI数据" class="headerlink" title="二、MSI数据"></a>二、MSI数据</h1><h2 id="常用的数据类型有哪些？"><a href="#常用的数据类型有哪些？" class="headerlink" title="常用的数据类型有哪些？"></a>常用的数据类型有哪些？</h2><p>在质谱成像领域内，你大概率会见到的两种文件格式：<br>● Raw文件格式<br>● imzML原始数据文件格式<br>事实上不同厂家的质谱仪器生产出来的Raw质谱数据是不一样的，主流公司的数据格式如下表所示。<br><img src="/img/MSI%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/1-2.png"></p><h2 id="Raw和imzML分别含有哪些信息？"><a href="#Raw和imzML分别含有哪些信息？" class="headerlink" title="Raw和imzML分别含有哪些信息？"></a>Raw和imzML分别含有哪些信息？</h2><p>RAW保留更多原始信息：仪器状态日志、诊断信息、原始校准数据等等<br>mzML侧重核心数据：<br><img src="/img/MSI%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/1-3.jpg"><br>在mzML文件下，<strong>mzML</strong>标签通常来说明多数与质谱数据无关的参数及过程，<strong>run</strong>中的<strong>spectrum</strong>标签则包含着谱图信息。其中的m&#x2F;z array和intensity array就是最重要的数据。<br>imzML相比元数据包含x、y、z坐标，并且带有一个.ibd的二进制数据文件。从光谱维度，它的每一行对应一个空间位置的完整质谱图；从空间维度，它的每一列固定m&#x2F;z值在所有位置的强度，用于生成我们的离子图像。</p><h2 id="如何从Raw数据转换成imzML数据？"><a href="#如何从Raw数据转换成imzML数据？" class="headerlink" title="如何从Raw数据转换成imzML数据？"></a>如何从Raw数据转换成imzML数据？</h2><p>理论上我们只需要知道扫描斑点数信息，就可以直接从Raw文件中计算出质谱成像所需要的空间坐标信息。<br>本文侧重点在于对imzML文件的预处理，对于Raw文件可以用以下的链接提供的软件来进行Raw to imzML的转换，试着使用他给出的示例文件来进行练习。<br><a href="https://www.ms-imaging.org/imzml/software-tools/raw-to-imzml-converter/">https://www.ms-imaging.org/imzml/software-tools/raw-to-imzml-converter/</a><br>在后续更新中我会将这一步进行时的截图放上。</p><h2 id="MALDI？DESI？"><a href="#MALDI？DESI？" class="headerlink" title="MALDI？DESI？"></a>MALDI？DESI？</h2><p>我们常见到的数据可能由<strong>MALDI</strong>(基质辅助激光解吸电离)和<strong>DESI</strong>(解吸电喷雾电离)两种技术得出。MALDI的空间分辨率高，但有着复杂的样品制备流程以及需要真空电离的条件。DESI则直接在大气压中进行电离，从而减少样品准备过程，但相对的空间分辨率低于MALDI。 </p><h1 id="三、imzML数据预处理"><a href="#三、imzML数据预处理" class="headerlink" title="三、imzML数据预处理"></a>三、imzML数据预处理</h1><h2 id="Cardinal包安装"><a href="#Cardinal包安装" class="headerlink" title="Cardinal包安装"></a>Cardinal包安装</h2><p>imzML文件的数据处理有很多不同的方式，在熟悉流程之后，你可以自己编写脚本来实现。<br>本文使用Cardinal包来进行预处理。Cardinal包支持MALDI和DESI的MSI工作，可以对生物样品进行基于质谱实验的统计分析。<br>在开始前，你需要自己安装好RStudio或其他IDE。安装Cardinal包，使用以下命令：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">if</span> (!require(<span class="hljs-string">&quot;BiocManager&quot;</span>, quietly = <span class="hljs-keyword">TRUE</span>))<br>    <span class="hljs-keyword">install</span>.packages(<span class="hljs-string">&quot;BiocManager&quot;</span>)<br><br>BiocManager::<span class="hljs-keyword">install</span>(<span class="hljs-string">&quot;Cardinal&quot;</span>)<br></code></pre></td></tr></table></figure><p>别忘了把刚安装好的包加载上：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-meta"># 加载包</span><br><span class="hljs-keyword">library</span>(Cardinal)<br></code></pre></td></tr></table></figure><p>到这里如果没有报错，说明安装成功了，你可以查看官方文档来进行进一步的了解。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">browseVignettes</span><span class="hljs-params">(<span class="hljs-string">&quot;Cardinal&quot;</span>)</span></span><br></code></pre></td></tr></table></figure><p>或者参考：<div class="row">    <embed src="/pdf/MSI数据处理流程/Cardinal.pdf" width="100%" height="550" type="application/pdf"></div></p><h2 id="读取imzML文件"><a href="#读取imzML文件" class="headerlink" title="读取imzML文件"></a>读取imzML文件</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 读取continuous数据<br>path_continuous &lt;- file.path (<span class="hljs-string">&quot;C:&quot;</span>, <span class="hljs-string">&quot;Users&quot;</span>, <span class="hljs-string">&quot;你的文件地址&quot;</span>, fsep=<span class="hljs-string">&quot;\\&quot;</span>)<br>mse &lt;- readMSIData(path_continuous)<br></code></pre></td></tr></table></figure><p>我们可以读取一些数据出来查看：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mz</span>(mse)[<span class="hljs-number">1</span>:<span class="hljs-number">10</span>] # 提取前<span class="hljs-number">10</span>个mz<br><span class="hljs-attribute">run</span>(mse)[<span class="hljs-number">1</span>:<span class="hljs-number">10</span>]# 提取前<span class="hljs-number">10</span>个批次信息<br><span class="hljs-attribute">featureData</span>(mse)[<span class="hljs-number">1</span>:<span class="hljs-number">10</span>]# 提取前<span class="hljs-number">10</span>个feature信息<br><span class="hljs-attribute">pixelData</span>(mse)[<span class="hljs-number">1</span>:<span class="hljs-number">10</span>]# 提取前<span class="hljs-number">10</span>个像素信息<br><span class="hljs-attribute">plot</span>(mse, pixel=c(<span class="hljs-number">211</span>))# 可视化单个像素，纵轴为强度，横轴为m/z<br><span class="hljs-attribute">plot</span>(mse, pixel=c(<span class="hljs-number">211</span>, <span class="hljs-number">611</span>))# 可视化多个像素，纵轴为强度，横轴为m/z<br><span class="hljs-attribute">image</span>(mse,mz=<span class="hljs-number">1200</span>)# 单m/z空间分布可视化，注意此处m/z可能在你的数据中不存在，选取你数据中有的m/z，可以运行后参考RStudio给出的提示<br></code></pre></td></tr></table></figure><p>大致了解你手中的imzML数据后，可以开始进行数据预处理了。</p><h2 id="预处理流程"><a href="#预处理流程" class="headerlink" title="预处理流程"></a>预处理流程</h2><h3 id="高斯平滑去噪"><a href="#高斯平滑去噪" class="headerlink" title="高斯平滑去噪"></a>高斯平滑去噪</h3><p>高斯平滑可以减少随机噪声，提高信噪比。</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">mse_smoothed &lt;- smoothSignal(mse,<br>                            <span class="hljs-keyword">method</span> = &quot;<span class="hljs-title function_">gaussian</span>&quot;,<br>                            <span class="hljs-title function_">window</span> = 5,<br>                            <span class="hljs-title function_">sd</span> = 2,<br>                            <span class="hljs-title function_">units</span> = &quot;<span class="hljs-title function_">ppm</span>&quot;)<br></code></pre></td></tr></table></figure><p>调整大小适中的窗口，可以有效去噪同时保留峰形</p><h3 id="谱对齐"><a href="#谱对齐" class="headerlink" title="谱对齐"></a>谱对齐</h3><p>由于仪器采集时条件不可能完全一致，产生一些偏移是必然的。初步对齐可以校正不同空间位置的质量偏移。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mse_aligned &lt;- peakAlign<span class="hljs-params">(mse_smoothed,</span><br><span class="hljs-params">                         <span class="hljs-attr">tolerance</span> = 1500,</span><br><span class="hljs-params">                         <span class="hljs-attr">units</span> = &quot;ppm&quot;,</span><br><span class="hljs-params">                         <span class="hljs-attr">BPPARAM</span> = MulticoreParam()</span>)<br></code></pre></td></tr></table></figure><p>增大tolerance可提高匹配率，但可能引入错误匹配</p><h3 id="TIC标准化"><a href="#TIC标准化" class="headerlink" title="TIC标准化"></a>TIC标准化</h3><p>TIC标准化可以校正不同像素点之间的整体强度差异。</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">mse_normalized &lt;- normalize(mse_aligned,<br>                           <span class="hljs-keyword">method</span> = &quot;<span class="hljs-title function_">tic</span>&quot;,<br>                           <span class="hljs-title function_">scale</span> = <span class="hljs-title function_">TRUE</span>)<br></code></pre></td></tr></table></figure><h3 id="peakpick选峰"><a href="#peakpick选峰" class="headerlink" title="peakpick选峰"></a>peakpick选峰</h3><p>一般来说，我们需要选取显著的质谱峰，减少数据维度。</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">mse_peaks &lt;- peakPick(mse_normalized, <span class="hljs-keyword">method</span>=&quot;<span class="hljs-title function_">filter</span>&quot;, <span class="hljs-title function_">SNR</span>=5)<br></code></pre></td></tr></table></figure><p>增大SNR可减少假阳性，但可能丢失低丰度峰<br>调整peakWidth可适应不同的峰形特征</p><h3 id="峰合并"><a href="#峰合并" class="headerlink" title="峰合并"></a>峰合并</h3><p>合并相近的峰以减少冗余。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mse_done &lt;- bin(mse_peaks,<span class="hljs-attribute">spectra</span>=<span class="hljs-string">&quot;intensity&quot;</span>,index=&quot;mz&quot;,method=&quot;linear&quot;, <span class="hljs-attribute">resolution</span>=5, <span class="hljs-attribute">units</span>=<span class="hljs-string">&quot;ppm&quot;</span>)<br></code></pre></td></tr></table></figure><p>改变resolution可改变合并的精度，但可能丢失一些峰。需要你根据实际情况调整。</p><h3 id="查看处理结果"><a href="#查看处理结果" class="headerlink" title="查看处理结果"></a>查看处理结果</h3><p>现在，你可以使用image函数来比较预处理前后的图像结果。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-id">#save</span><br>imzfile &lt;- <span class="hljs-built_in">tempfile</span>(fileext=<span class="hljs-string">&quot;你的文件名.imzML&quot;</span>)<br><span class="hljs-function"><span class="hljs-title">writeMSIData</span><span class="hljs-params">(mse_done, imzfile)</span></span><br>list<span class="hljs-selector-class">.files</span>(imzfile)<br></code></pre></td></tr></table></figure><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>这篇文章主要用于自己学习MSI预处理步骤以及对BIONET新成员介绍imzML文件的预处理流程。目前处理过的数据还很少，大家在测试时候也可以自己多试试几个参数看看效果（虽然效果并不是特别明显）。如果有错误的烦请指正。<br>下一个版本将会更新各个步骤的操作截图和运行结果。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/01/01/hello-world/"/>
    <url>/2025/01/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
